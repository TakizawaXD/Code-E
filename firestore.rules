rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only read their own data, but can create their own user document.
    // They can only update/delete their own document.
    match /users/{userId} {
      allow read, update, delete: if isOwner(userId);
      allow create: if request.auth != null;
    }

    // Courses, modules and lessons are public.
    match /courses/{courseId} {
      allow read: if true;
      
      match /modules/{moduleId} {
        allow read: if true;
        
        match /lessons/{lessonId} {
          allow read: if true;

          // Comments can be created by any authenticated user.
          // Users can only update/delete their own comments.
          match /comments/{commentId} {
            allow read: if true;
            allow create: if request.auth != null;
            allow update, delete: if isOwner(request.resource.data.userId);
          }
        }
      }
    }

    // Learning paths are public.
    match /learningPaths/{pathId} {
      allow read: if true;
    }

    // Forum threads can be read by anyone.
    // Authenticated users can create threads.
    // Authors can update/delete their own threads.
    match /forumThreads/{threadId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isOwner(resource.data.authorId);

      // Forum posts can be read by anyone.
      // Authenticated users can create posts.
      // Authors can update/delete their own posts.
      match /posts/{postId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if isOwner(resource.data.authorId);
      }
    }
  }
}
